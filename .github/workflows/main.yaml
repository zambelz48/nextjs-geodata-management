name: GeoData Management Deployment Workflow

env:
  NODE_VERSION: 20
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

on:
  workflow_dispatch:

  push:
    branches:
      - main
      - staging

jobs:
  production-deployment:
    name: GeoData management production deployment
    runs-on: ubuntu-latest
    if: github.ref == 'refs/head/main'
    outputs:
      build: ${{ steps.success.outputs.buildStatus }}
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v3
        with:
          version: latest

      - name: Use Node JS ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'
      - run: pnpm install --prod

      - uses: actions/checkout@v4
      - name: Install Vercel CLI
        run: pnpm install --global vercel@latest
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}

      - id: success
        if: success()
        run: echo "buildStatus=success" >> $GITHUB_OUTPUT

  staging-deployment:
    name: GeoData management staging deployment
    runs-on: ubuntu-latest
    if: github.ref == 'refs/head/staging'
    outputs:
      build: ${{ steps.success.outputs.buildStatus }}
    steps:
    - uses: actions/checkout@v4
    - uses: pnpm/actions-setup@v3
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'pnpm'
    - run: pnpm install --prod

    - uses: actions/checkout@v4
    - name: Install Vercel CLI
      run: pnpm install --global vercel@latest
    - name: Pull Vercel Environment Information
      run: vercel pull --yes --environment=development --token=${{ secrets.VERCEL_TOKEN }}
    - name: Build Project Artifacts
      run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
    - name: Deploy Project Artifacts to Vercel
      run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}

    - id: success
      if: success()
      run: echo "buildStatus=success" >> $GITHUB_OUTPUT


